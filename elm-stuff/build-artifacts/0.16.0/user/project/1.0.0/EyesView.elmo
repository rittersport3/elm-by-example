Elm.EyesView = Elm.EyesView || {};
Elm.EyesView.make = function (_elm) {
   "use strict";
   _elm.EyesView = _elm.EyesView || {};
   if (_elm.EyesView.values) return _elm.EyesView.values;
   var _U = Elm.Native.Utils.make(_elm),
   $Basics = Elm.Basics.make(_elm),
   $Color = Elm.Color.make(_elm),
   $Debug = Elm.Debug.make(_elm),
   $Graphics$Collage = Elm.Graphics.Collage.make(_elm),
   $Graphics$Element = Elm.Graphics.Element.make(_elm),
   $List = Elm.List.make(_elm),
   $Maybe = Elm.Maybe.make(_elm),
   $Result = Elm.Result.make(_elm),
   $Signal = Elm.Signal.make(_elm);
   var _op = {};
   var eyePupil = F2(function (w,h) {    return A2($Graphics$Collage.filled,$Color.black,A2($Graphics$Collage.oval,w,h));});
   var eyeBorder = F2(function (w,h) {
      return $Graphics$Collage.group(_U.list([A2($Graphics$Collage.filled,$Color.black,A2($Graphics$Collage.oval,w,h))
                                             ,A2($Graphics$Collage.filled,$Color.white,A2($Graphics$Collage.oval,w * 9 / 10,h * 9 / 10))]));
   });
   var eyesView = F2(function (_p1,_p0) {
      var _p2 = _p1;
      var _p5 = _p2._0;
      var _p4 = _p2._1;
      var _p3 = _p0;
      var yC = $Basics.toFloat(_p4) / 2;
      var xC = $Basics.toFloat(_p5) / 4;
      return A3($Graphics$Collage.collage,
      _p5,
      _p4,
      _U.list([A2($Graphics$Collage.moveX,0 - xC,A2(eyeBorder,2 * xC,2 * yC))
              ,A2($Graphics$Collage.moveX,xC,A2(eyeBorder,2 * xC,2 * yC))
              ,A2($Graphics$Collage.move,{ctor: "_Tuple2",_0: _p3._0,_1: _p3._1},A2(eyePupil,xC / 5,yC / 5))
              ,A2($Graphics$Collage.move,{ctor: "_Tuple2",_0: _p3._2,_1: _p3._3},A2(eyePupil,xC / 5,yC / 5))]));
   });
   var main = A2(eyesView,{ctor: "_Tuple2",_0: 700,_1: 500},{ctor: "_Tuple4",_0: -50,_1: -50,_2: 100,_3: 100});
   return _elm.EyesView.values = {_op: _op,eyeBorder: eyeBorder,eyePupil: eyePupil,eyesView: eyesView,main: main};
};